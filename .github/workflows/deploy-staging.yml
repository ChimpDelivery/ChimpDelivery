name: deploy-staging

on:
  push:
    branches: [dev]
     
env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_ORG: talusstudio
  SENTRY_PROJECT: talus-dashboard
  VERSION: "sentry-cli releases propose-version"

concurrency: production_environment

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, redis
        
      - name: Setup Redis
        uses: supercharge/redis-github-action@1.5.0
        with:
          redis-version: 5
        
      - name: Install Dependencies
        run: composer install --no-ansi --no-interaction --no-progress --no-scripts

      - name: Install NPM Dependencies
        run: npm ci
        
      - name: Compile Assets
        run: npm run production
        
      - name: Deploy
        uses: deployphp/action@v1.0.21
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          dep: deploy env=staging -vvv
          
      - name: Download Sentry CLI
        run: curl -sL https://sentry.io/get-cli/ | SENTRY_CLI_VERSION="2.2.0" bash
          
      - name: Notify Sentry Release
        run: sentry-cli releases new "$VERSION" &&
             sentry-cli releases set-commits "$VERSION" --auto &&
             sentry-cli releases finalize "$VERSION"
